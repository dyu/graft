syntax = "proto3";
package graft.metastore.v1;

import "graft/common/v1/common.proto";

// Request a snapshot of the volume at the given LSN (or latest).
// Returns: graft.metastore.v1.SnapshotResponse
message SnapshotRequest {
  bytes vid = 1;
  optional uint64 lsn = 2;
}

message SnapshotResponse {
  graft.common.v1.Snapshot snapshot = 1;
}

// Retrieve the latest snapshot along with a Splinter containing all changed
// offsets between the given LSN (exclusive) and the latest LSN (inclusive).
// Returns: graft.metastore.v1.PullOffsetsResponse
message PullOffsetsRequest {
  bytes vid = 1;
  uint64 lsn = 2;
}

message PullOffsetsResponse {
  graft.common.v1.Snapshot snapshot = 1;
  bytes offsets = 2;
}

// Returns a list of segments added between the provided LSN (exclusive) and the
// latest LSN (inclusive). This method will also return the latest Snapshot of
// the Volume.
// Returns: graft.metastore.v1.PullSegmentsResponse
message PullSegmentsRequest {
  bytes vid = 1;
  uint64 lsn = 2;
}

message PullSegmentsResponse {
  graft.common.v1.Snapshot snapshot = 1;
  repeated graft.common.v1.SegmentInfo segments = 2;
}

// Commit changes to a Volume if it is safe to do so. The provided Snapshot LSN
// is the snapshot the commit was based on. Returns the newly committed Snapshot
// metadata on success.
message CommitRequest {
  bytes vid = 1;
  uint64 snapshot_lsn = 2;
  uint32 last_offset = 3;
  repeated graft.common.v1.SegmentInfo segments = 4;
}

message CommitResponse {
  graft.common.v1.Snapshot snapshot = 1;
}
