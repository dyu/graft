#!/usr/bin/env bash
set -euo pipefail

GIT_ROOT="$(git rev-parse --show-toplevel)"

# run with `PROFILE=release` to use the release profile
PROFILE="${PROFILE:-debug}"
PROFILE_FLAG=""
if [ "${PROFILE}" == "release" ]; then
    PROFILE_FLAG="--release"
fi

# make sure sqlite can find the vfs
LIB_PATH="${GIT_ROOT}/target/${PROFILE}"
export LD_LIBRARY_PATH=${LIB_PATH}${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
export DYLD_LIBRARY_PATH=${LIB_PATH}${DYLD_LIBRARY_PATH:+:$DYLD_LIBRARY_PATH}

VID="GontkHa6QVLMYnkyk16wUP"

GDB=${GDB:-0}
export RUST_LOG=${RUST_LOG:-warn}

cargo build ${PROFILE_FLAG} --features precept/disabled --package graft-sqlite-extension

# parse flags
while [[ $# -gt 0 ]]; do
    case $1 in
        -v*)
            VID="${1:2}"
            shift
            ;;
        --trace)
            RUST_LOG="trace"
            shift
            ;;
        -p*)
            export GRAFT_PROFILE="${1:2}"
            shift
            ;;
        --fly)
            export GRAFT_METASTORE="https://graft-metastore.fly.dev"
            export GRAFT_PAGESTORE="https://graft-pagestore.fly.dev"
            shift
            ;;
        --gdb)
            GDB=1
            shift
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: $0 [-vVID] [--trace] [-pPROFILE] [--fly] [--gdb]"
            exit 1
            ;;
    esac
done

ARGS=(
    -header
    -table
    -cmd '.log stderr'
    -cmd '.load libgraft'
    -cmd ".open 'file:${VID}?vfs=graft'"
)

if [ "${GDB}" == 1 ]; then
    GDB_ARGS=(
        --eval-command="set breakpoint pending on"
        --eval-command="break rust_panic"
        -ex run
        --args sqlite3
        "${ARGS[@]}"
    )
    exec rust-gdb "${GDB_ARGS[@]}"
else
    exec just run sqlite bin "${ARGS[@]}"
fi
